# XXX this workflow is intended for development/testing purposes
# if pushed to a public repository (presumably github.com/gardener/cc-utils), this indicates
# this happened by accident

name: Test
on:
  push:
  workflow_dispatch:
  pull_request_target:
    types:
      - labeled


#COLLABORATOR: The user has been invited to collaborate on the repository.
#CONTRIBUTOR: The user has previously committed to the repository.
#FIRST_TIMER: The user has never previously committed to GitHub.
#FIRST_TIME_CONTRIBUTOR: The user has not previously committed to this specific repository.
#MANNEQUIN: The user is a placeholder for an unclaimed user account.
#MEMBER: The user is a member of the organization that owns the repository.
#NONE: The user has no association with the repository.
#OWNER: The user is the owner of the repository.

defaults:
  run:
    shell: bash

jobs:
  dump-env:
    runs-on: ubuntu-latest
    steps:
      - name: test-condition
        run: |
          echo "should be true: ${{ inputs.foo == '' }}"
          if ${{ inputs.foo == '' }}; then
            echo "foo was not set"
          else
            echo "should not happen"
          fi
      - name: dump-env
        run: |
          echo -eu
          env | sort

          mkdir /home/runner/.local
          mkdir /home/runner/.local/bin
          cat <<EOF > /home/runner/.local/bin/xxx
          #!/usr/bin/env bash
          echo foobar-test
          EOF
          chmod +x /home/runner/.local/bin/xxx

          xxx
  dump-github-ctx:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write # needed to add/remove labels
    steps:
      - uses: gardener/cc-utils/.github/actions/trusted-checkout@honour-trusted-label
      - name: print-log
        run: |
          set -eu
          git log -2
          echo --------------------
          ls
      - name: test
        run: |
          echo 'printing $ACTIONS_ID_TOKEN_REQUEST_TOKEN  $ACTIONS_ID_TOKEN_REQUEST_URL'
          echo "printing $ACTIONS_ID_TOKEN_REQUEST_TOKEN  $ACTIONS_ID_TOKEN_REQUEST_URL"
          echo "printing github context"
          cat <<EOF >ctx.json
          ${{ toJSON(github) }}
          EOF

          cat ctx.json
          echo
          echo

          jq . ctx.json
